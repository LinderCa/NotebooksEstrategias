name: Run Real Time Data

permissions:
  contents: write

on:
  schedule:
    - cron: "0 * * * *"  
  workflow_dispatch:      # Para ejecutarlo manualmente

jobs:
  real_time:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0 
          ref: main

      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Instalar dependencias y run Real Time 
        shell: bash -l {0}
        run: |
          conda install -y pip papermill ipykernel pandas numpy scikit-learn yfinance
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p data
          papermill downLoadDataRealtimeAlpha.ipynb downLoadDataRealtimeAlpha_out.ipynb -k python3
      
      - name: Verificar cambios en dataxd y dataxh
        shell: bash
        run: |
          echo "=== git status ==="
          git status --short data/dataxd.txt data/dataxh.txt
          echo
          echo "=== diff dataxd ==="
          git diff -- data/dataxd.txt || echo "  (sin cambios en dataxd)"
          echo
          echo "=== diff dataxh ==="
          git diff -- data/dataxh.txt || echo "  (sin cambios en dataxh)"


      - name: Commit y push de archivos actualizados
        if: ${{ always() }}
        shell: bash
        run: |
          git config user.name "LinderCa"
          git config user.email "casaslinder@gmail.com"
          git add .
          git diff --cached --quiet || git commit -m "ðŸ”„ Actualiza datos en dataxd y dataxh"
          git push origin main
   
  run_notebooks:
    needs: real_time
    runs-on: ubuntu-latest
    strategy:
      matrix:
        notebook:
          - name: pm40
            file: PM40_PromedioMovil40.ipynb
    
    steps:
      - name: Clonar repositorio con datos ya actualizados
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main
        
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Instalar dependencias
        shell: bash -l {0}
        run: |
          conda install -y pip papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p data data/backtesting

      - name: Ejecutar notebook ${{ matrix.notebook.name }}
        shell: bash -l {0}
        run: |
          papermill ${{ matrix.notebook.file }} ${{ matrix.notebook.name }}_out.ipynb -k python3

      - name: Verificar cambios en pm40_h.txt, trades_pm40.txt y estadisticas_pm40.txt
        shell: bash
        run: |
          echo "=== Listado de archivos generados ==="
          ls -l data/pm40_h.txt data/backtesting/trades_pm40.txt data/backtesting/estadisticas_pm40.txt || true
          echo
          echo "=== git status ==="
          git status --short \
            data/pm40_h.txt \
            data/backtesting/trades_pm40.txt \
            data/backtesting/estadisticas_pm40.txt
          echo
          echo "=== diff pm40_h ==="
          git diff -- data/pm40_h.txt || echo "  (sin cambios en pm40_h.txt)"
          echo
          echo "=== diff trades_pm40 ==="
          git diff -- data/backtesting/trades_pm40.txt || echo "  (sin cambios en trades_pm40.txt)"
          echo
          echo "=== diff estadisticas_pm40 ==="
          git diff -- data/backtesting/estadisticas_pm40.txt || echo "  (sin cambios en estadisticas_pm40.txt)"

      - name: Upload outputs artefact
        uses: actions/upload-artifact@v4
        with:
          name: salida-${{ matrix.notebook.name }}
          path: |
            data/${{ matrix.notebook.name }}_h.txt
            data/backtesting/*_${{ matrix.notebook.name }}.txt

  push_outputs:
      needs: run_notebooks
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            persist-credentials: true
            fetch-depth: 0

        - name: Download artefact pm40
          uses: actions/download-artifact@v4
          with:
            name: salida-pm40
            path: tmp/pm40